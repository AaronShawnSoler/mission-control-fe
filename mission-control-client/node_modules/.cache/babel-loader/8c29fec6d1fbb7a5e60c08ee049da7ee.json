{"ast":null,"code":"import { _ as _extends, C as CombinedError, a as addMetadata, f as formatDocument, c as collectTypesFromResponse, m as makeResult, b as makeErrorResult, t as toSuspenseSource, w as withPromise, d as createRequest } from \"./index-9bb95fa6.js\";\nexport { C as CombinedError, d as createRequest, f as formatDocument, b as makeErrorResult, m as makeResult, s as stringifyVariables } from \"./index-9bb95fa6.js\";\nimport { share, filter, map, tap, merge, mergeMap, takeUntil, make, switchMap, fromValue, interval, makeSubject, publish, take, onStart, onEnd } from \"wonka\";\nimport { print, Kind } from \"graphql\";\n\nvar shouldSkip = function (ref) {\n  var operationName = ref.operationName;\n  return \"subscription\" !== operationName && \"query\" !== operationName;\n};\n\nfunction _ref(x) {\n  return \"\" + x;\n}\n\nvar ssrExchange = function (params) {\n  var data = {};\n\n  var isCached = function (operation) {\n    return !shouldSkip(operation) && void 0 !== data[operation.key];\n  };\n\n  function _ref2(op) {\n    return !isCached(op);\n  }\n\n  function _ref3(op) {\n    return function (operation, result) {\n      var error = result.error;\n      var deserialized = {\n        operation: operation,\n        data: result.data,\n        extensions: void 0,\n        error: void 0\n      };\n\n      if (void 0 !== error) {\n        deserialized.error = new CombinedError({\n          networkError: new Error(error.networkError),\n          graphQLErrors: error.graphQLErrors\n        });\n      }\n\n      return deserialized;\n    }(op, data[op.key]);\n  }\n\n  function _ref4(op) {\n    return isCached(op);\n  }\n\n  function _ref5(result) {\n    var operation = result.operation;\n\n    if (!shouldSkip(operation)) {\n      var serialized = function (ref) {\n        var error = ref.error;\n        var result = {\n          data: ref.data,\n          error: void 0\n        };\n\n        if (void 0 !== error) {\n          result.error = {\n            networkError: \"\" + error.networkError,\n            graphQLErrors: error.graphQLErrors.map(_ref)\n          };\n        }\n\n        return result;\n      }(result);\n\n      data[operation.key] = serialized;\n    }\n  }\n\n  function _ref6(result) {\n    delete data[result.operation.key];\n  }\n\n  var ssr = function (ref) {\n    var client = ref.client;\n    var forward = ref.forward;\n    return function (ops$) {\n      var isClient = params && \"boolean\" == typeof params.isClient ? !!params.isClient : !client.suspense;\n      var sharedOps$ = share(ops$);\n      var forwardedOps$ = forward(filter(_ref2)(sharedOps$));\n      var cachedOps$ = map(_ref3)(filter(_ref4)(sharedOps$));\n\n      if (!isClient) {\n        forwardedOps$ = tap(_ref5)(forwardedOps$);\n      } else {\n        cachedOps$ = tap(_ref6)(cachedOps$);\n      }\n\n      return merge([forwardedOps$, cachedOps$]);\n    };\n  };\n\n  ssr.restoreData = function (restore) {\n    return _extends(data, restore);\n  };\n\n  ssr.extractData = function () {\n    return _extends({}, data);\n  };\n\n  if (params && params.initialState) {\n    ssr.restoreData(params.initialState);\n  }\n\n  return ssr;\n};\n\nvar shouldSkip$1 = function (ref) {\n  var operationName = ref.operationName;\n  return \"mutation\" !== operationName && \"query\" !== operationName;\n};\n\nfunction _ref$1(operation) {\n  return _extends(_extends({}, operation), {\n    query: formatDocument(operation.query)\n  });\n}\n\nfunction _ref5(op) {\n  return addMetadata(op, {\n    cacheOutcome: \"miss\"\n  });\n}\n\nfunction _ref7(op) {\n  return shouldSkip$1(op);\n}\n\nvar cacheExchange = function (ref) {\n  var forward = ref.forward;\n  var client = ref.client;\n  var resultCache = new Map();\n  var operationCache = Object.create(null);\n  var mapTypeNames = _ref$1;\n  var handleAfterMutation = afterMutation(resultCache, operationCache, client);\n  var handleAfterQuery = afterQuery(resultCache, operationCache);\n\n  var isOperationCached = function (operation) {\n    var requestPolicy = operation.context.requestPolicy;\n    return \"query\" === operation.operationName && \"network-only\" !== requestPolicy && (\"cache-only\" === requestPolicy || resultCache.has(operation.key));\n  };\n\n  function _ref2(operation) {\n    var cachedResult = resultCache.get(operation.key);\n\n    var result = _extends(_extends({}, cachedResult), {\n      operation: addMetadata(operation, {\n        cacheOutcome: cachedResult ? \"hit\" : \"miss\"\n      })\n    });\n\n    if (\"cache-and-network\" === operation.context.requestPolicy) {\n      result.stale = !0;\n      reexecuteOperation(client, operation);\n    }\n\n    return result;\n  }\n\n  function _ref3(op) {\n    return !shouldSkip$1(op) && isOperationCached(op);\n  }\n\n  function _ref4(response) {\n    if (response.operation && \"mutation\" === response.operation.operationName) {\n      handleAfterMutation(response);\n    } else if (response.operation && \"query\" === response.operation.operationName) {\n      handleAfterQuery(response);\n    }\n  }\n\n  function _ref6(op) {\n    return !shouldSkip$1(op) && !isOperationCached(op);\n  }\n\n  return function (ops$) {\n    var sharedOps$ = share(ops$);\n    var cachedOps$ = map(_ref2)(filter(_ref3)(sharedOps$));\n    var forwardedOps$ = tap(_ref4)(forward(map(_ref5)(merge([map(mapTypeNames)(filter(_ref6)(sharedOps$)), filter(_ref7)(sharedOps$)]))));\n    return merge([cachedOps$, forwardedOps$]);\n  };\n};\n\nvar reexecuteOperation = function (client, operation) {\n  return client.reexecuteOperation(_extends(_extends({}, operation), {\n    context: _extends(_extends({}, operation.context), {\n      requestPolicy: \"network-only\"\n    })\n  }));\n};\n\nvar afterMutation = function (resultCache, operationCache, client) {\n  function _ref9(key) {\n    if (resultCache.has(key)) {\n      var operation = resultCache.get(key).operation;\n      resultCache.delete(key);\n      reexecuteOperation(client, operation);\n    }\n  }\n\n  return function (response) {\n    var pendingOperations = new Set();\n\n    function _ref8(key) {\n      pendingOperations.add(key);\n    }\n\n    collectTypesFromResponse(response.data).forEach(function (typeName) {\n      var operations = operationCache[typeName] || (operationCache[typeName] = new Set());\n      operations.forEach(_ref8);\n      operations.clear();\n    });\n    pendingOperations.forEach(_ref9);\n  };\n};\n\nvar afterQuery = function (resultCache, operationCache) {\n  return function (response) {\n    var operation = response.operation;\n    var data = response.data;\n\n    if (null == data) {\n      return;\n    }\n\n    resultCache.set(operation.key, {\n      operation: operation,\n      data: data,\n      error: response.error\n    });\n    collectTypesFromResponse(response.data).forEach(function (typeName) {\n      (operationCache[typeName] || (operationCache[typeName] = new Set())).add(operation.key);\n    });\n  };\n};\n\nvar isSubscriptionOperation = function (operation) {\n  return \"subscription\" === operation.operationName;\n};\n\nfunction _ref$2(op) {\n  return !isSubscriptionOperation(op);\n}\n\nvar subscriptionExchange = function (ref) {\n  var forwardSubscription = ref.forwardSubscription;\n  return function (ref) {\n    var client = ref.client;\n    var forward = ref.forward;\n    return function (ops$) {\n      var sharedOps$ = share(ops$);\n      var subscriptionResults$ = mergeMap(function (operation) {\n        var key = operation.key;\n        var teardown$ = filter(function (op) {\n          return \"teardown\" === op.operationName && op.key === key;\n        })(sharedOps$);\n        return takeUntil(teardown$)(function (operation) {\n          var observableish = forwardSubscription({\n            key: operation.key.toString(36),\n            query: print(operation.query),\n            variables: operation.variables,\n            context: _extends({}, operation.context)\n          });\n          return make(function (ref) {\n            var next = ref.next;\n            var complete = ref.complete;\n            var isComplete = !1;\n            var sub = observableish.subscribe({\n              next: function (result) {\n                return next(makeResult(operation, result));\n              },\n              error: function (err) {\n                return next(makeErrorResult(operation, err));\n              },\n              complete: function () {\n                if (!isComplete) {\n                  client.reexecuteOperation(_extends(_extends({}, operation), {\n                    operationName: \"teardown\"\n                  }));\n                }\n\n                complete();\n              }\n            });\n            return function () {\n              isComplete = !0;\n              sub.unsubscribe();\n            };\n          });\n        }(operation));\n      })(filter(isSubscriptionOperation)(sharedOps$));\n      var forward$ = forward(filter(_ref$2)(sharedOps$));\n      return merge([subscriptionResults$, forward$]);\n    };\n  };\n};\n\nfunction _ref2(result) {\n  return console.log(\"[Exchange debug]: Completed operation: \", result);\n}\n\nfunction _ref3(op) {\n  return console.log(\"[Exchange debug]: Incoming operation: \", op);\n}\n\nvar debugExchange = function (ref) {\n  var forward = ref.forward;\n\n  if (\"production\" === process.env.NODE_ENV) {\n    return function _ref(ops$) {\n      return forward(ops$);\n    };\n  } else {\n    return function _ref4(ops$) {\n      return tap(_ref2)(forward(tap(_ref3)(ops$)));\n    };\n  }\n};\n\nvar dedupExchange = function (ref) {\n  var forward = ref.forward;\n  var inFlightKeys = new Set();\n\n  var filterIncomingOperation = function (operation) {\n    var key = operation.key;\n    var operationName = operation.operationName;\n\n    if (\"teardown\" === operationName) {\n      inFlightKeys.delete(key);\n      return !0;\n    } else if (\"query\" !== operationName && \"subscription\" !== operationName) {\n      return !0;\n    }\n\n    var isInFlight = inFlightKeys.has(key);\n    inFlightKeys.add(key);\n    return !isInFlight;\n  };\n\n  var afterOperationResult = function (ref) {\n    inFlightKeys.delete(ref.operation.key);\n  };\n\n  return function (ops$) {\n    var forward$ = filter(filterIncomingOperation)(ops$);\n    return tap(afterOperationResult)(forward(forward$));\n  };\n};\n\nfunction _ref$3(operation) {\n  var operationName = operation.operationName;\n  return \"query\" === operationName || \"mutation\" === operationName;\n}\n\nvar fetchExchange = function (ref) {\n  var forward = ref.forward;\n  var isOperationFetchable = _ref$3;\n\n  function _ref2(op) {\n    return !isOperationFetchable(op);\n  }\n\n  return function (ops$) {\n    var sharedOps$ = share(ops$);\n    var fetchResults$ = mergeMap(function (operation) {\n      var key = operation.key;\n      var teardown$ = filter(function (op) {\n        return \"teardown\" === op.operationName && op.key === key;\n      })(sharedOps$);\n      return takeUntil(teardown$)(createFetchSource(operation));\n    })(filter(isOperationFetchable)(sharedOps$));\n    var forward$ = forward(filter(_ref2)(sharedOps$));\n    return merge([fetchResults$, forward$]);\n  };\n};\n\nfunction _ref3$1(node) {\n  return node.kind === Kind.OPERATION_DEFINITION && node.name;\n}\n\nvar createFetchSource = function (operation) {\n  if (\"production\" !== process.env.NODE_ENV && \"subscription\" === operation.operationName) {\n    throw new Error(\"Received a subscription operation in the httpExchange. You are probably trying to create a subscription. Have you added a subscriptionExchange?\");\n  }\n\n  return make(function (ref) {\n    var next = ref.next;\n    var complete = ref.complete;\n    var abortController = \"undefined\" != typeof AbortController ? new AbortController() : void 0;\n    var context = operation.context;\n    var extraOptions = \"function\" == typeof context.fetchOptions ? context.fetchOptions() : context.fetchOptions || {};\n    var operationName = void 0 !== (node = operation.query.definitions.find(_ref3$1)) && node.name ? node.name.value : null;\n    var node;\n    var body = {\n      query: print(operation.query),\n      variables: operation.variables\n    };\n\n    if (null !== operationName) {\n      body.operationName = operationName;\n    }\n\n    var fetchOptions = _extends(_extends({\n      body: JSON.stringify(body),\n      method: \"POST\"\n    }, extraOptions), {\n      headers: _extends({\n        \"content-type\": \"application/json\"\n      }, extraOptions.headers),\n      signal: void 0 !== abortController ? abortController.signal : void 0\n    });\n\n    executeFetch(operation, fetchOptions).then(function (result) {\n      if (void 0 !== result) {\n        next(result);\n      }\n\n      complete();\n    });\n    return function () {\n      if (void 0 !== abortController) {\n        abortController.abort();\n      }\n    };\n  });\n};\n\nvar executeFetch = function (operation, opts) {\n  var ref = operation.context;\n  var response;\n  return (ref.fetch || fetch)(ref.url, opts).then(function (res) {\n    var status = res.status;\n    response = res;\n\n    if (status < 200 || status >= (\"manual\" === opts.redirect ? 400 : 300)) {\n      throw new Error(res.statusText);\n    } else {\n      return res.json();\n    }\n  }).then(function (result) {\n    return makeResult(operation, result, response);\n  }).catch(function (err) {\n    if (\"AbortError\" !== err.name) {\n      return makeErrorResult(operation, err, response);\n    }\n  });\n};\n\nfunction _ref$4() {\n  return !1;\n}\n\nfunction _ref2$1(ref) {\n  var operationName = ref.operationName;\n\n  if (\"teardown\" !== operationName && \"production\" !== process.env.NODE_ENV) {\n    console.warn('No exchange has handled operations of type \"' + operationName + \"\\\". Check whether you've added an exchange responsible for these operations.\");\n  }\n}\n\nvar fallbackExchangeIO = function (ops$) {\n  return filter(_ref$4)(tap(_ref2$1)(ops$));\n};\n\nvar composeExchanges = function (exchanges) {\n  if (1 === exchanges.length) {\n    return exchanges[0];\n  }\n\n  return function (payload) {\n    return exchanges.reduceRight(function (forward, exchange) {\n      return exchange({\n        client: payload.client,\n        forward: forward\n      });\n    }, payload.forward);\n  };\n};\n\nvar defaultExchanges = [dedupExchange, cacheExchange, fetchExchange];\n\nvar createClient = function (opts) {\n  return new Client(opts);\n};\n\nvar Client = function Client(opts) {\n  var this$1 = this;\n  this.activeOperations = Object.create(null);\n\n  this.createOperationContext = function (opts) {\n    return _extends(_extends({\n      url: this$1.url,\n      fetchOptions: this$1.fetchOptions,\n      fetch: this$1.fetch\n    }, opts), {\n      requestPolicy: (opts || {}).requestPolicy || this$1.requestPolicy\n    });\n  };\n\n  this.createRequestOperation = function (type, request, opts) {\n    return {\n      key: request.key,\n      query: request.query,\n      variables: request.variables,\n      operationName: type,\n      context: this$1.createOperationContext(opts)\n    };\n  };\n\n  this.reexecuteOperation = function (operation) {\n    if ((this$1.activeOperations[operation.key] || 0) > 0) {\n      this$1.dispatchOperation(operation);\n    }\n  };\n\n  this.executeQuery = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"query\", query, opts);\n    var response$ = this$1.executeRequestOperation(operation);\n    var pollInterval = operation.context.pollInterval;\n\n    if (pollInterval) {\n      return switchMap(function _ref() {\n        return response$;\n      })(merge([fromValue(0), interval(pollInterval)]));\n    }\n\n    return response$;\n  };\n\n  this.executeSubscription = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"subscription\", query, opts);\n    return this$1.executeRequestOperation(operation);\n  };\n\n  this.executeMutation = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"mutation\", query, opts);\n    return this$1.executeRequestOperation(operation);\n  };\n\n  this.url = opts.url;\n  this.fetchOptions = opts.fetchOptions;\n  this.fetch = opts.fetch;\n  this.suspense = !!opts.suspense;\n  this.requestPolicy = opts.requestPolicy || \"cache-first\";\n  var ref = makeSubject();\n  var nextOperation = ref.next;\n  this.operations$ = ref.source;\n  var queuedOperations = [];\n  var isDispatching = !1;\n\n  this.dispatchOperation = function (operation) {\n    queuedOperations.push(operation);\n\n    if (!isDispatching) {\n      isDispatching = !0;\n      var queued;\n\n      while (void 0 !== (queued = queuedOperations.shift())) {\n        nextOperation(queued);\n      }\n\n      isDispatching = !1;\n    }\n  };\n\n  this.exchange = composeExchanges(void 0 !== opts.exchanges ? opts.exchanges : defaultExchanges);\n  this.results$ = share(this.exchange({\n    client: this,\n    forward: fallbackExchangeIO\n  })(this.operations$));\n  publish(this.results$);\n};\n\nClient.prototype.onOperationStart = function onOperationStart(operation) {\n  var key = operation.key;\n  this.activeOperations[key] = (this.activeOperations[key] || 0) + 1;\n  this.dispatchOperation(operation);\n};\n\nClient.prototype.onOperationEnd = function onOperationEnd(operation) {\n  var key = operation.key;\n  var prevActive = this.activeOperations[key] || 0;\n\n  if ((this.activeOperations[key] = prevActive <= 0 ? 0 : prevActive - 1) <= 0) {\n    this.dispatchOperation(_extends(_extends({}, operation), {\n      operationName: \"teardown\"\n    }));\n  }\n};\n\nClient.prototype.executeRequestOperation = function executeRequestOperation(operation) {\n  var this$1 = this;\n  var key = operation.key;\n  var operationName = operation.operationName;\n  var operationResults$ = filter(function (res) {\n    return res.operation.key === key;\n  })(this.results$);\n\n  if (\"mutation\" === operationName) {\n    return take(1)(onStart(function _ref2() {\n      return this$1.dispatchOperation(operation);\n    })(operationResults$));\n  }\n\n  var teardown$ = filter(function (op) {\n    return \"teardown\" === op.operationName && op.key === key;\n  })(this.operations$);\n  var result$ = onEnd(function () {\n    this$1.onOperationEnd(operation);\n  })(onStart(function () {\n    this$1.onOperationStart(operation);\n  })(takeUntil(teardown$)(operationResults$)));\n  return !1 !== operation.context.suspense && this.suspense && \"query\" === operationName ? toSuspenseSource(result$) : result$;\n};\n\nClient.prototype.query = function query(query$1, variables, context) {\n  if (!context || \"boolean\" != typeof context.suspense) {\n    context = _extends(_extends({}, context), {\n      suspense: !1\n    });\n  }\n\n  return withPromise(this.executeQuery(createRequest(query$1, variables), context));\n};\n\nClient.prototype.mutation = function mutation(query, variables, context) {\n  return withPromise(this.executeMutation(createRequest(query, variables), context));\n};\n\nexport { Client, cacheExchange, composeExchanges, createClient, debugExchange, dedupExchange, defaultExchanges, fallbackExchangeIO, fetchExchange, ssrExchange, subscriptionExchange };","map":{"version":3,"sources":["/home/nil/Projects/mission-control-fe/mission-control-client/node_modules/urql/dist/es/core.js"],"names":["_","_extends","C","CombinedError","a","addMetadata","f","formatDocument","c","collectTypesFromResponse","m","makeResult","b","makeErrorResult","t","toSuspenseSource","w","withPromise","d","createRequest","s","stringifyVariables","share","filter","map","tap","merge","mergeMap","takeUntil","make","switchMap","fromValue","interval","makeSubject","publish","take","onStart","onEnd","print","Kind","shouldSkip","ref","operationName","_ref","x","ssrExchange","params","data","isCached","operation","key","_ref2","op","_ref3","result","error","deserialized","extensions","networkError","Error","graphQLErrors","_ref4","_ref5","serialized","_ref6","ssr","client","forward","ops$","isClient","suspense","sharedOps$","forwardedOps$","cachedOps$","restoreData","restore","extractData","initialState","shouldSkip$1","_ref$1","query","cacheOutcome","_ref7","cacheExchange","resultCache","Map","operationCache","Object","create","mapTypeNames","handleAfterMutation","afterMutation","handleAfterQuery","afterQuery","isOperationCached","requestPolicy","context","has","cachedResult","get","stale","reexecuteOperation","response","_ref9","delete","pendingOperations","Set","_ref8","add","forEach","typeName","operations","clear","set","isSubscriptionOperation","_ref$2","subscriptionExchange","forwardSubscription","subscriptionResults$","teardown$","observableish","toString","variables","next","complete","isComplete","sub","subscribe","err","unsubscribe","forward$","console","log","debugExchange","process","env","NODE_ENV","dedupExchange","inFlightKeys","filterIncomingOperation","isInFlight","afterOperationResult","_ref$3","fetchExchange","isOperationFetchable","fetchResults$","createFetchSource","_ref3$1","node","kind","OPERATION_DEFINITION","name","abortController","AbortController","extraOptions","fetchOptions","definitions","find","value","body","JSON","stringify","method","headers","signal","executeFetch","then","abort","opts","fetch","url","res","status","redirect","statusText","json","catch","_ref$4","_ref2$1","warn","fallbackExchangeIO","composeExchanges","exchanges","length","payload","reduceRight","exchange","defaultExchanges","createClient","Client","this$1","activeOperations","createOperationContext","createRequestOperation","type","request","dispatchOperation","executeQuery","response$","executeRequestOperation","pollInterval","executeSubscription","executeMutation","nextOperation","operations$","source","queuedOperations","isDispatching","push","queued","shift","results$","prototype","onOperationStart","onOperationEnd","prevActive","operationResults$","result$","query$1","mutation"],"mappings":"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","sourcesContent":["import { _ as _extends, C as CombinedError, a as addMetadata, f as formatDocument, c as collectTypesFromResponse, m as makeResult, b as makeErrorResult, t as toSuspenseSource, w as withPromise, d as createRequest } from \"./index-9bb95fa6.js\";\nexport { C as CombinedError, d as createRequest, f as formatDocument, b as makeErrorResult, m as makeResult, s as stringifyVariables } from \"./index-9bb95fa6.js\";\nimport { share, filter, map, tap, merge, mergeMap, takeUntil, make, switchMap, fromValue, interval, makeSubject, publish, take, onStart, onEnd } from \"wonka\";\nimport { print, Kind } from \"graphql\";\n\nvar shouldSkip = function (ref) {\n  var operationName = ref.operationName;\n  return \"subscription\" !== operationName && \"query\" !== operationName;\n};\n\nfunction _ref(x) {\n  return \"\" + x;\n}\n\nvar ssrExchange = function (params) {\n  var data = {};\n\n  var isCached = function (operation) {\n    return !shouldSkip(operation) && void 0 !== data[operation.key];\n  };\n\n  function _ref2(op) {\n    return !isCached(op);\n  }\n\n  function _ref3(op) {\n    return function (operation, result) {\n      var error = result.error;\n      var deserialized = {\n        operation: operation,\n        data: result.data,\n        extensions: void 0,\n        error: void 0\n      };\n\n      if (void 0 !== error) {\n        deserialized.error = new CombinedError({\n          networkError: new Error(error.networkError),\n          graphQLErrors: error.graphQLErrors\n        });\n      }\n\n      return deserialized;\n    }(op, data[op.key]);\n  }\n\n  function _ref4(op) {\n    return isCached(op);\n  }\n\n  function _ref5(result) {\n    var operation = result.operation;\n\n    if (!shouldSkip(operation)) {\n      var serialized = function (ref) {\n        var error = ref.error;\n        var result = {\n          data: ref.data,\n          error: void 0\n        };\n\n        if (void 0 !== error) {\n          result.error = {\n            networkError: \"\" + error.networkError,\n            graphQLErrors: error.graphQLErrors.map(_ref)\n          };\n        }\n\n        return result;\n      }(result);\n\n      data[operation.key] = serialized;\n    }\n  }\n\n  function _ref6(result) {\n    delete data[result.operation.key];\n  }\n\n  var ssr = function (ref) {\n    var client = ref.client;\n    var forward = ref.forward;\n    return function (ops$) {\n      var isClient = params && \"boolean\" == typeof params.isClient ? !!params.isClient : !client.suspense;\n      var sharedOps$ = share(ops$);\n      var forwardedOps$ = forward(filter(_ref2)(sharedOps$));\n      var cachedOps$ = map(_ref3)(filter(_ref4)(sharedOps$));\n\n      if (!isClient) {\n        forwardedOps$ = tap(_ref5)(forwardedOps$);\n      } else {\n        cachedOps$ = tap(_ref6)(cachedOps$);\n      }\n\n      return merge([forwardedOps$, cachedOps$]);\n    };\n  };\n\n  ssr.restoreData = function (restore) {\n    return _extends(data, restore);\n  };\n\n  ssr.extractData = function () {\n    return _extends({}, data);\n  };\n\n  if (params && params.initialState) {\n    ssr.restoreData(params.initialState);\n  }\n\n  return ssr;\n};\n\nvar shouldSkip$1 = function (ref) {\n  var operationName = ref.operationName;\n  return \"mutation\" !== operationName && \"query\" !== operationName;\n};\n\nfunction _ref$1(operation) {\n  return _extends(_extends({}, operation), {\n    query: formatDocument(operation.query)\n  });\n}\n\nfunction _ref5(op) {\n  return addMetadata(op, {\n    cacheOutcome: \"miss\"\n  });\n}\n\nfunction _ref7(op) {\n  return shouldSkip$1(op);\n}\n\nvar cacheExchange = function (ref) {\n  var forward = ref.forward;\n  var client = ref.client;\n  var resultCache = new Map();\n  var operationCache = Object.create(null);\n  var mapTypeNames = _ref$1;\n  var handleAfterMutation = afterMutation(resultCache, operationCache, client);\n  var handleAfterQuery = afterQuery(resultCache, operationCache);\n\n  var isOperationCached = function (operation) {\n    var requestPolicy = operation.context.requestPolicy;\n    return \"query\" === operation.operationName && \"network-only\" !== requestPolicy && (\"cache-only\" === requestPolicy || resultCache.has(operation.key));\n  };\n\n  function _ref2(operation) {\n    var cachedResult = resultCache.get(operation.key);\n\n    var result = _extends(_extends({}, cachedResult), {\n      operation: addMetadata(operation, {\n        cacheOutcome: cachedResult ? \"hit\" : \"miss\"\n      })\n    });\n\n    if (\"cache-and-network\" === operation.context.requestPolicy) {\n      result.stale = !0;\n      reexecuteOperation(client, operation);\n    }\n\n    return result;\n  }\n\n  function _ref3(op) {\n    return !shouldSkip$1(op) && isOperationCached(op);\n  }\n\n  function _ref4(response) {\n    if (response.operation && \"mutation\" === response.operation.operationName) {\n      handleAfterMutation(response);\n    } else if (response.operation && \"query\" === response.operation.operationName) {\n      handleAfterQuery(response);\n    }\n  }\n\n  function _ref6(op) {\n    return !shouldSkip$1(op) && !isOperationCached(op);\n  }\n\n  return function (ops$) {\n    var sharedOps$ = share(ops$);\n    var cachedOps$ = map(_ref2)(filter(_ref3)(sharedOps$));\n    var forwardedOps$ = tap(_ref4)(forward(map(_ref5)(merge([map(mapTypeNames)(filter(_ref6)(sharedOps$)), filter(_ref7)(sharedOps$)]))));\n    return merge([cachedOps$, forwardedOps$]);\n  };\n};\n\nvar reexecuteOperation = function (client, operation) {\n  return client.reexecuteOperation(_extends(_extends({}, operation), {\n    context: _extends(_extends({}, operation.context), {\n      requestPolicy: \"network-only\"\n    })\n  }));\n};\n\nvar afterMutation = function (resultCache, operationCache, client) {\n  function _ref9(key) {\n    if (resultCache.has(key)) {\n      var operation = resultCache.get(key).operation;\n      resultCache.delete(key);\n      reexecuteOperation(client, operation);\n    }\n  }\n\n  return function (response) {\n    var pendingOperations = new Set();\n\n    function _ref8(key) {\n      pendingOperations.add(key);\n    }\n\n    collectTypesFromResponse(response.data).forEach(function (typeName) {\n      var operations = operationCache[typeName] || (operationCache[typeName] = new Set());\n      operations.forEach(_ref8);\n      operations.clear();\n    });\n    pendingOperations.forEach(_ref9);\n  };\n};\n\nvar afterQuery = function (resultCache, operationCache) {\n  return function (response) {\n    var operation = response.operation;\n    var data = response.data;\n\n    if (null == data) {\n      return;\n    }\n\n    resultCache.set(operation.key, {\n      operation: operation,\n      data: data,\n      error: response.error\n    });\n    collectTypesFromResponse(response.data).forEach(function (typeName) {\n      (operationCache[typeName] || (operationCache[typeName] = new Set())).add(operation.key);\n    });\n  };\n};\n\nvar isSubscriptionOperation = function (operation) {\n  return \"subscription\" === operation.operationName;\n};\n\nfunction _ref$2(op) {\n  return !isSubscriptionOperation(op);\n}\n\nvar subscriptionExchange = function (ref) {\n  var forwardSubscription = ref.forwardSubscription;\n  return function (ref) {\n    var client = ref.client;\n    var forward = ref.forward;\n    return function (ops$) {\n      var sharedOps$ = share(ops$);\n      var subscriptionResults$ = mergeMap(function (operation) {\n        var key = operation.key;\n        var teardown$ = filter(function (op) {\n          return \"teardown\" === op.operationName && op.key === key;\n        })(sharedOps$);\n        return takeUntil(teardown$)(function (operation) {\n          var observableish = forwardSubscription({\n            key: operation.key.toString(36),\n            query: print(operation.query),\n            variables: operation.variables,\n            context: _extends({}, operation.context)\n          });\n          return make(function (ref) {\n            var next = ref.next;\n            var complete = ref.complete;\n            var isComplete = !1;\n            var sub = observableish.subscribe({\n              next: function (result) {\n                return next(makeResult(operation, result));\n              },\n              error: function (err) {\n                return next(makeErrorResult(operation, err));\n              },\n              complete: function () {\n                if (!isComplete) {\n                  client.reexecuteOperation(_extends(_extends({}, operation), {\n                    operationName: \"teardown\"\n                  }));\n                }\n\n                complete();\n              }\n            });\n            return function () {\n              isComplete = !0;\n              sub.unsubscribe();\n            };\n          });\n        }(operation));\n      })(filter(isSubscriptionOperation)(sharedOps$));\n      var forward$ = forward(filter(_ref$2)(sharedOps$));\n      return merge([subscriptionResults$, forward$]);\n    };\n  };\n};\n\nfunction _ref2(result) {\n  return console.log(\"[Exchange debug]: Completed operation: \", result);\n}\n\nfunction _ref3(op) {\n  return console.log(\"[Exchange debug]: Incoming operation: \", op);\n}\n\nvar debugExchange = function (ref) {\n  var forward = ref.forward;\n\n  if (\"production\" === process.env.NODE_ENV) {\n    return function _ref(ops$) {\n      return forward(ops$);\n    };\n  } else {\n    return function _ref4(ops$) {\n      return tap(_ref2)(forward(tap(_ref3)(ops$)));\n    };\n  }\n};\n\nvar dedupExchange = function (ref) {\n  var forward = ref.forward;\n  var inFlightKeys = new Set();\n\n  var filterIncomingOperation = function (operation) {\n    var key = operation.key;\n    var operationName = operation.operationName;\n\n    if (\"teardown\" === operationName) {\n      inFlightKeys.delete(key);\n      return !0;\n    } else if (\"query\" !== operationName && \"subscription\" !== operationName) {\n      return !0;\n    }\n\n    var isInFlight = inFlightKeys.has(key);\n    inFlightKeys.add(key);\n    return !isInFlight;\n  };\n\n  var afterOperationResult = function (ref) {\n    inFlightKeys.delete(ref.operation.key);\n  };\n\n  return function (ops$) {\n    var forward$ = filter(filterIncomingOperation)(ops$);\n    return tap(afterOperationResult)(forward(forward$));\n  };\n};\n\nfunction _ref$3(operation) {\n  var operationName = operation.operationName;\n  return \"query\" === operationName || \"mutation\" === operationName;\n}\n\nvar fetchExchange = function (ref) {\n  var forward = ref.forward;\n  var isOperationFetchable = _ref$3;\n\n  function _ref2(op) {\n    return !isOperationFetchable(op);\n  }\n\n  return function (ops$) {\n    var sharedOps$ = share(ops$);\n    var fetchResults$ = mergeMap(function (operation) {\n      var key = operation.key;\n      var teardown$ = filter(function (op) {\n        return \"teardown\" === op.operationName && op.key === key;\n      })(sharedOps$);\n      return takeUntil(teardown$)(createFetchSource(operation));\n    })(filter(isOperationFetchable)(sharedOps$));\n    var forward$ = forward(filter(_ref2)(sharedOps$));\n    return merge([fetchResults$, forward$]);\n  };\n};\n\nfunction _ref3$1(node) {\n  return node.kind === Kind.OPERATION_DEFINITION && node.name;\n}\n\nvar createFetchSource = function (operation) {\n  if (\"production\" !== process.env.NODE_ENV && \"subscription\" === operation.operationName) {\n    throw new Error(\"Received a subscription operation in the httpExchange. You are probably trying to create a subscription. Have you added a subscriptionExchange?\");\n  }\n\n  return make(function (ref) {\n    var next = ref.next;\n    var complete = ref.complete;\n    var abortController = \"undefined\" != typeof AbortController ? new AbortController() : void 0;\n    var context = operation.context;\n    var extraOptions = \"function\" == typeof context.fetchOptions ? context.fetchOptions() : context.fetchOptions || {};\n    var operationName = void 0 !== (node = operation.query.definitions.find(_ref3$1)) && node.name ? node.name.value : null;\n    var node;\n    var body = {\n      query: print(operation.query),\n      variables: operation.variables\n    };\n\n    if (null !== operationName) {\n      body.operationName = operationName;\n    }\n\n    var fetchOptions = _extends(_extends({\n      body: JSON.stringify(body),\n      method: \"POST\"\n    }, extraOptions), {\n      headers: _extends({\n        \"content-type\": \"application/json\"\n      }, extraOptions.headers),\n      signal: void 0 !== abortController ? abortController.signal : void 0\n    });\n\n    executeFetch(operation, fetchOptions).then(function (result) {\n      if (void 0 !== result) {\n        next(result);\n      }\n\n      complete();\n    });\n    return function () {\n      if (void 0 !== abortController) {\n        abortController.abort();\n      }\n    };\n  });\n};\n\nvar executeFetch = function (operation, opts) {\n  var ref = operation.context;\n  var response;\n  return (ref.fetch || fetch)(ref.url, opts).then(function (res) {\n    var status = res.status;\n    response = res;\n\n    if (status < 200 || status >= (\"manual\" === opts.redirect ? 400 : 300)) {\n      throw new Error(res.statusText);\n    } else {\n      return res.json();\n    }\n  }).then(function (result) {\n    return makeResult(operation, result, response);\n  }).catch(function (err) {\n    if (\"AbortError\" !== err.name) {\n      return makeErrorResult(operation, err, response);\n    }\n  });\n};\n\nfunction _ref$4() {\n  return !1;\n}\n\nfunction _ref2$1(ref) {\n  var operationName = ref.operationName;\n\n  if (\"teardown\" !== operationName && \"production\" !== process.env.NODE_ENV) {\n    console.warn('No exchange has handled operations of type \"' + operationName + \"\\\". Check whether you've added an exchange responsible for these operations.\");\n  }\n}\n\nvar fallbackExchangeIO = function (ops$) {\n  return filter(_ref$4)(tap(_ref2$1)(ops$));\n};\n\nvar composeExchanges = function (exchanges) {\n  if (1 === exchanges.length) {\n    return exchanges[0];\n  }\n\n  return function (payload) {\n    return exchanges.reduceRight(function (forward, exchange) {\n      return exchange({\n        client: payload.client,\n        forward: forward\n      });\n    }, payload.forward);\n  };\n};\n\nvar defaultExchanges = [dedupExchange, cacheExchange, fetchExchange];\n\nvar createClient = function (opts) {\n  return new Client(opts);\n};\n\nvar Client = function Client(opts) {\n  var this$1 = this;\n  this.activeOperations = Object.create(null);\n\n  this.createOperationContext = function (opts) {\n    return _extends(_extends({\n      url: this$1.url,\n      fetchOptions: this$1.fetchOptions,\n      fetch: this$1.fetch\n    }, opts), {\n      requestPolicy: (opts || {}).requestPolicy || this$1.requestPolicy\n    });\n  };\n\n  this.createRequestOperation = function (type, request, opts) {\n    return {\n      key: request.key,\n      query: request.query,\n      variables: request.variables,\n      operationName: type,\n      context: this$1.createOperationContext(opts)\n    };\n  };\n\n  this.reexecuteOperation = function (operation) {\n    if ((this$1.activeOperations[operation.key] || 0) > 0) {\n      this$1.dispatchOperation(operation);\n    }\n  };\n\n  this.executeQuery = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"query\", query, opts);\n    var response$ = this$1.executeRequestOperation(operation);\n    var pollInterval = operation.context.pollInterval;\n\n    if (pollInterval) {\n      return switchMap(function _ref() {\n        return response$;\n      })(merge([fromValue(0), interval(pollInterval)]));\n    }\n\n    return response$;\n  };\n\n  this.executeSubscription = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"subscription\", query, opts);\n    return this$1.executeRequestOperation(operation);\n  };\n\n  this.executeMutation = function (query, opts) {\n    var operation = this$1.createRequestOperation(\"mutation\", query, opts);\n    return this$1.executeRequestOperation(operation);\n  };\n\n  this.url = opts.url;\n  this.fetchOptions = opts.fetchOptions;\n  this.fetch = opts.fetch;\n  this.suspense = !!opts.suspense;\n  this.requestPolicy = opts.requestPolicy || \"cache-first\";\n  var ref = makeSubject();\n  var nextOperation = ref.next;\n  this.operations$ = ref.source;\n  var queuedOperations = [];\n  var isDispatching = !1;\n\n  this.dispatchOperation = function (operation) {\n    queuedOperations.push(operation);\n\n    if (!isDispatching) {\n      isDispatching = !0;\n      var queued;\n\n      while (void 0 !== (queued = queuedOperations.shift())) {\n        nextOperation(queued);\n      }\n\n      isDispatching = !1;\n    }\n  };\n\n  this.exchange = composeExchanges(void 0 !== opts.exchanges ? opts.exchanges : defaultExchanges);\n  this.results$ = share(this.exchange({\n    client: this,\n    forward: fallbackExchangeIO\n  })(this.operations$));\n  publish(this.results$);\n};\n\nClient.prototype.onOperationStart = function onOperationStart(operation) {\n  var key = operation.key;\n  this.activeOperations[key] = (this.activeOperations[key] || 0) + 1;\n  this.dispatchOperation(operation);\n};\n\nClient.prototype.onOperationEnd = function onOperationEnd(operation) {\n  var key = operation.key;\n  var prevActive = this.activeOperations[key] || 0;\n\n  if ((this.activeOperations[key] = prevActive <= 0 ? 0 : prevActive - 1) <= 0) {\n    this.dispatchOperation(_extends(_extends({}, operation), {\n      operationName: \"teardown\"\n    }));\n  }\n};\n\nClient.prototype.executeRequestOperation = function executeRequestOperation(operation) {\n  var this$1 = this;\n  var key = operation.key;\n  var operationName = operation.operationName;\n  var operationResults$ = filter(function (res) {\n    return res.operation.key === key;\n  })(this.results$);\n\n  if (\"mutation\" === operationName) {\n    return take(1)(onStart(function _ref2() {\n      return this$1.dispatchOperation(operation);\n    })(operationResults$));\n  }\n\n  var teardown$ = filter(function (op) {\n    return \"teardown\" === op.operationName && op.key === key;\n  })(this.operations$);\n  var result$ = onEnd(function () {\n    this$1.onOperationEnd(operation);\n  })(onStart(function () {\n    this$1.onOperationStart(operation);\n  })(takeUntil(teardown$)(operationResults$)));\n  return !1 !== operation.context.suspense && this.suspense && \"query\" === operationName ? toSuspenseSource(result$) : result$;\n};\n\nClient.prototype.query = function query(query$1, variables, context) {\n  if (!context || \"boolean\" != typeof context.suspense) {\n    context = _extends(_extends({}, context), {\n      suspense: !1\n    });\n  }\n\n  return withPromise(this.executeQuery(createRequest(query$1, variables), context));\n};\n\nClient.prototype.mutation = function mutation(query, variables, context) {\n  return withPromise(this.executeMutation(createRequest(query, variables), context));\n};\n\nexport { Client, cacheExchange, composeExchanges, createClient, debugExchange, dedupExchange, defaultExchanges, fallbackExchangeIO, fetchExchange, ssrExchange, subscriptionExchange };"]},"metadata":{},"sourceType":"module"}