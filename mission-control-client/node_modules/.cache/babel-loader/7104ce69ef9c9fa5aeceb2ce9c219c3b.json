{"ast":null,"code":"import _slicedToArray from \"/home/nil/Projects/mission-control-fe/mission-control-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nil/Projects/mission-control-fe/mission-control-client/src/components/Authorization/index.jsx\";\nimport React, { useState, useEffect, useCallback, createContext } from 'react';\nimport { withAuth, SecureRoute } from '@okta/okta-react';\nimport { Switch } from 'react-router-dom';\nimport Layout from '../Layout';\nimport Project from '../Project/Project';\nimport ProjectListView from '../ProjectListView'; // OKTA authentication widget, invokes implicit callback to login\n// if the user attempts to access a protected view.\n// isAuthenticated peers into storage for a valid token upon PKCE\n// handshake, so clear localStorage is called on logout.\n\nexport default withAuth(({\n  auth\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        authState = _useState2[0],\n        setAuthState = _useState2[1];\n\n  const isAuthenticated = auth.isAuthenticated,\n        logout = auth.logout,\n        getAccessToken = auth.getAccessToken; // Memoized callback for subsequent re-renders of Dashboard children\n\n  const checkAuthentication = useCallback(async () => {\n    const authenticated = await isAuthenticated();\n\n    if (authenticated !== authState) {\n      setAuthState(authenticated);\n    }\n  }, [authState, isAuthenticated]); // useCallback on re-render if dependencies are valid\n\n  useEffect(() => {\n    checkAuthentication();\n  });\n\n  const invokeOktaLogout = async () => {\n    localStorage.clear();\n    logout('/');\n  };\n\n  return authState === null ? null : React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(SecureRoute, {\n    path: \"/project\",\n    component: Project,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(SecureRoute, {\n    path: \"/\",\n    render: props => React.createElement(ProjectListView, Object.assign({}, props, {\n      logout: invokeOktaLogout,\n      getAccessToken: getAccessToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/home/nil/Projects/mission-control-fe/mission-control-client/src/components/Authorization/index.jsx"],"names":["React","useState","useEffect","useCallback","createContext","withAuth","SecureRoute","Switch","Layout","Project","ProjectListView","auth","authState","setAuthState","isAuthenticated","logout","getAccessToken","checkAuthentication","authenticated","invokeOktaLogout","localStorage","clear","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,aAAlD,QAAuE,OAAvE;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;AACA;AACA;AACA;;AAEA,eAAeL,QAAQ,CAAC,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACFV,QAAQ,CAAC,IAAD,CADN;AAAA;AAAA,QAC7BW,SAD6B;AAAA,QAClBC,YADkB;;AAAA,QAE5BC,eAF4B,GAEgBH,IAFhB,CAE5BG,eAF4B;AAAA,QAEXC,MAFW,GAEgBJ,IAFhB,CAEXI,MAFW;AAAA,QAEHC,cAFG,GAEgBL,IAFhB,CAEHK,cAFG,EAGpC;;AACA,QAAMC,mBAAmB,GAAGd,WAAW,CAAC,YAAY;AAClD,UAAMe,aAAa,GAAG,MAAMJ,eAAe,EAA3C;;AACA,QAAII,aAAa,KAAKN,SAAtB,EAAiC;AAC/BC,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACD;AACF,GALsC,EAKpC,CAACN,SAAD,EAAYE,eAAZ,CALoC,CAAvC,CAJoC,CAWpC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,mBAAmB;AACpB,GAFQ,CAAT;;AAIA,QAAME,gBAAgB,GAAG,YAAY;AACnCC,IAAAA,YAAY,CAACC,KAAb;AACAN,IAAAA,MAAM,CAAC,GAAD,CAAN;AACD,GAHD;;AAKA,SAAOH,SAAS,KAAK,IAAd,GAAqB,IAArB,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEH,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,MAAM,EAAEa,KAAK,IACX,oBAAC,eAAD,oBACMA,KADN;AAEE,MAAA,MAAM,EAAEH,gBAFV;AAGE,MAAA,cAAc,EAAEH,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAiBD,CAtCsB,CAAvB","sourcesContent":["import React, { useState, useEffect, useCallback, createContext } from 'react';\nimport { withAuth, SecureRoute } from '@okta/okta-react';\nimport { Switch } from 'react-router-dom';\n\nimport Layout from '../Layout';\nimport Project from '../Project/Project';\nimport ProjectListView from '../ProjectListView';\n\n// OKTA authentication widget, invokes implicit callback to login\n// if the user attempts to access a protected view.\n// isAuthenticated peers into storage for a valid token upon PKCE\n// handshake, so clear localStorage is called on logout.\n\nexport default withAuth(({ auth }) => {\n  const [authState, setAuthState] = useState(null);\n  const { isAuthenticated, logout, getAccessToken } = auth;\n  // Memoized callback for subsequent re-renders of Dashboard children\n  const checkAuthentication = useCallback(async () => {\n    const authenticated = await isAuthenticated();\n    if (authenticated !== authState) {\n      setAuthState(authenticated);\n    }\n  }, [authState, isAuthenticated]);\n\n  // useCallback on re-render if dependencies are valid\n  useEffect(() => {\n    checkAuthentication();\n  });\n\n  const invokeOktaLogout = async () => {\n    localStorage.clear();\n    logout('/');\n  };\n\n  return authState === null ? null : (\n    <Layout>\n      <Switch>\n        <SecureRoute path=\"/project\" component={Project} />\n        <SecureRoute\n          path=\"/\"\n          render={props => (\n            <ProjectListView\n              {...props}\n              logout={invokeOktaLogout}\n              getAccessToken={getAccessToken}\n            />\n          )}\n        />\n      </Switch>\n    </Layout>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}